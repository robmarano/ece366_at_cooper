FROM ubuntu:focal
LABEL maintainer="Prof. Rob Marano <rob@cooper.edu>"
ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=America/New_York
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
#RUN yes | unminimize
# add our course's global bashrc file
ADD --chown=root:root ./etc/bash.bashrc /etc/bash.bashrc
ADD --chown=root:root ./etc/motd /etc/motd
ADD --chown=root:root ./etc/issue /etc/issue
# update your instance of Ubuntu server
RUN apt update
RUN yes | apt upgrade -y
RUN apt install apt-utils
RUN apt upgrade -y --force-yes --option=Dpkg::Options::=--force-confdef
RUN apt install -y bash-completion htop
# install essential C development tools
RUN apt install -y build-essential gdb 
RUN apt install -y sudo curl git-core vim wget
#RUN apt install manpages-dev man-db
# install OpenJDK 17 for Java
RUN apt install -y openjdk-17-jdk-headless
RUN /usr/bin/java -version
ENV JAVA_HOME /usr/lib/jvm/java-17-openjdk-arm64
# install Maven mvn
RUN wget https://dlcdn.apache.org/maven/maven-3/3.8.4/binaries/apache-maven-3.8.4-bin.tar.gz
RUN tar xvfz apache-maven-3.8.4-bin.tar.gz
RUN ln -s apache-maven-3.8.4 maven
# RUN /maven/bin/mvn -v
RUN /bin/rm -f apache-maven-3.8.4-bin.tar.gz
# install nodejs and npm for React dev
RUN apt install -y nodejs npm
# install mysql for an RDBMS
RUN apt install -y mysql-server
# install terminal multiplexer to have multiple terminals in one session
# https://tmuxcheatsheet.com/
RUN apt install -y tmux
# allow ece366 to have superuser/root privileges
RUN apt install -y --force-yes sudo
ADD --chown=root:root ./etc/sudoers /etc/sudoers
# install some neat Linux tools
#RUN apt install -y fortune cowsay
# create a local user called "ece366" for local development
RUN adduser \
#        --quiet \
        --debug \
        --disabled-password \
        --shell /bin/bash \
        --home /home/ece366 \
        --gecos "User" ece366
# configure your local "ece366"
RUN echo "ece366:Cooper1859!" | chpasswd
RUN usermod -aG sudo ece366
#  Add new user docker to sudo group
RUN adduser ece366 sudo
# Ensure sudo group users are not 
# asked for a password when using 
# sudo command by ammending sudoers file
RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
# create your C development directory called /home/ece366/dev/c
USER ece366
WORKDIR /home/ece366
ADD --chown=ece366:ece366 ./etc/docker-prompt /home/ece366/.docker-prompt
ADD --chown=ece366:ece366 ./etc/vimrc /home/ece366/.vimrc
ADD --chown=ece366:ece366 ./etc/tmux.conf /home/ece366/.tmux.conf
ADD --chown=ece366:ece366 ./README.md /home/ece366/ECE-366-README.md
# configure YOUR GitHub credentials
ADD --chown=ece366:ece366 ./etc/.gitconfig /home/ece366/.gitconfig
# add the pre-existing SSH files for your access to your GitHub account
# ensure you have in your host computer under C:\Users\YOURNAME\Documents\ssh in Windows or /Users/YOURNAME/ssh
RUN mkdir -p /home/ece366/.ssh
ADD --chown=ece366:ece366 ./ssh/id_ed25519 /home/ece366/.ssh/id_ed25519
ADD --chown=ece366:ece366 ./ssh/id_ed25519.pub /home/ece366/.ssh/id_ed25519.pub
RUN chmod 400 /home/ece366/.ssh/id_ed25519
RUN chmod 400 /home/ece366/.ssh/id_ed25519.pub
ENV TERM xterm-256color
#expose port 8080 for your API server
EXPOSE 8080
#expose port 3000 for your Node React dev server
EXPOSE 3000
# run Bash prompt for your container
RUN ln -s ~/myHome/.m2 ~/.m2
RUN ln -s ~/myHome/dev ~/dev
SHELL ["/bin/bash", "-c"]
